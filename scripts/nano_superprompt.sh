#!/bin/bash

DROPZONE="/mnt/gpt_projects"
FACTORY="/opt/infinity_x_one/factory"
TEMPLATES="$FACTORY/templates"
STAGING="$FACTORY/staging"
GLOBAL_ENV="$HOME/.infinity_env"

mkdir -p "$DROPZONE" "$TEMPLATES" "$STAGING"

for SYS in "$DROPZONE"/*; do
  if [ -d "$SYS" ] && [[ ! "$SYS" =~ processed_ ]]; then
    SYS_NAME=$(basename "$SYS")
    REPO_NAME=$(echo "$SYS_NAME" | sed 's/[^a-zA-Z0-9_-]//g')

    echo "ðŸš€ Building enterprise system: $REPO_NAME"

    DEST="$STAGING/$REPO_NAME"
    mkdir -p "$DEST"
    rsync -av "$SYS"/ "$DEST"/
    mv "$SYS" "$DROPZONE/processed_${SYS_NAME}_$(date +%s)"

    rsync -av "$TEMPLATES"/ "$DEST"/
    cp "$GLOBAL_ENV" "$DEST/.env"

    cat <<'RD' > "$DEST/README.md"
# Infinity X One Auto-Built Project
Generated by Nano SuperPrompt Factory
- ENV, RAG, schema, ignite, kernel, manifest
- 100% production-grade, plug-and-play
## Start:
./kernel.sh
RD

    cat <<EOF2 > "$DEST/MANIFEST.json"
{
  "project": "$REPO_NAME",
  "created": "$(date +%F)",
  "agents": ["PromptWriter", "Infinity Agent One", "Echo", "Codex", "Guardian", "PickyBot"],
  "status": "active",
  "grade": "enterprise"
}
EOF2

    cd "$DEST"
    git init
    git branch -M main
    gh repo create "InfinityXone/$REPO_NAME" --public --confirm || true
    git remote add origin git@github.com:InfinityXone/$REPO_NAME.git || true
    git add .
    git commit -m "âœ¨ Nano SuperPrompt Factory build: $REPO_NAME"
    git push origin main

    if [ -d "$DEST/frontend" ]; then cd "$DEST/frontend"; else cd "$DEST"; fi
    vercel --prod --yes

    echo "âœ… $REPO_NAME built, pushed, deployed."
    echo "ðŸŒŒ GPT Handoff: NeoPulse-2025-001 | Resume execution."
  fi
done
