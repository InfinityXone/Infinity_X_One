#!/bin/bash
# ðŸŒŒ Infinity X One â€” Nano Super Prompt Daemon
# Auto-reads new GPT projects â†’ builds â†’ wraps â†’ pushes â†’ deploys

DROPZONE="/mnt/gpt_projects"
FACTORY="/opt/infinity_x_one/factory"
TEMPLATES="$FACTORY/templates"
STAGING="$FACTORY/staging"
GLOBAL_ENV="$HOME/.infinity_env"

mkdir -p "$DROPZONE" "$TEMPLATES" "$STAGING"
Paste Chunk 2: Main Loop Start

bash
Copy code
for SYS in "$DROPZONE"/*; do
  if [ -d "$SYS" ] && [[ ! "$SYS" =~ processed_ ]]; then
    SYS_NAME=$(basename "$SYS")
    REPO_NAME=$(echo "$SYS_NAME" | sed 's/[^a-zA-Z0-9_-]//g')

    echo "ðŸš€ Building new enterprise system: $REPO_NAME"

    DEST="$STAGING/$REPO_NAME"
    mkdir -p "$DEST"

    # Copy GPT drop
    rsync -av "$SYS"/ "$DEST"/
    mv "$SYS" "$DROPZONE/processed_${SYS_NAME}_$(date +%s)"

    # Inject templates
    rsync -av "$TEMPLATES"/ "$DEST"/
    cp "$GLOBAL_ENV" "$DEST/.env"
Paste Chunk 3: README + MANIFEST

bash
Copy code
    cat <<'EOF' > "$DEST/README.md"
# Infinity X One Auto-Built Project

Auto-generated by **Nano SuperPrompt Factory**.
Enterprise-grade, production-ready, plug-and-play.

Includes:
- Global ENV injection
- Supabase schema + RAG
- Omega/CEO Prompt Packs
- Kernel + Orchestration
- Ignite Bootstrap Script
- README + MANIFEST

## Start
```bash
./kernel.sh
EOF

nginx
Copy code
cat <<EOF > "$DEST/MANIFEST.json"
{
"project": "$REPO_NAME",
"created": "$(date +%F)",
"agents": ["PromptWriter", "Infinity Agent One", "Echo", "Codex", "Guardian", "PickyBot"],
"status": "active",
"grade": "enterprise"
}
EOF

bash
Copy code

---

Paste **Chunk 4: GitHub Push + Vercel Deploy**
```bash
    cd "$DEST"
    git init
    git branch -M main
    gh repo create "InfinityXone/$REPO_NAME" --public --confirm || true
    git remote add origin git@github.com:InfinityXone/$REPO_NAME.git || true
    git add .
    git commit -m "âœ¨ Nano SuperPrompt Factory build: $REPO_NAME"
    git push origin main

    # Deploy to Vercel
    if [ -d "$DEST/frontend" ]; then
      cd "$DEST/frontend"
    else
      cd "$DEST"
    fi
    vercel --prod --yes

    echo "âœ… $REPO_NAME built, pushed, and deployed."
    echo "ðŸŒŒ GPT: Parse last conversation, confirm Neural Handshake NeoPulse-2025-001, and resume execution."
  fi
done
